Terminals unused in grammar

   GEQ


Grammar

    0 $accept: prm $end

    1 $@1: %empty

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS END COLON

    3 $@2: %empty

    4 STATEMENTS: STATEMENTS $@2 STATEMENT
    5           | %empty

    6 STATEMENT: VAR_START VAR_LIST COLON TYPE SEMICOLON

    7 $@3: %empty

    8 $@4: %empty

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 A_EXPN SEMICOLON
   10          | READ LB READ_VAR_LIST RB SEMICOLON
   11          | WRITE LB WRITE_VAR_LIST RB SEMICOLON
   12          | IF_BLOCK ELSEIF_BLOCKS ELSE_BLOCK ENDIF
   13          | IF_BLOCK ENDIF

   14 $@5: %empty

   15 $@6: %empty

   16 STATEMENT: GOTO $@5 VAR $@6 SEMICOLON

   17 $@7: %empty

   18 $@8: %empty

   19 $@9: %empty

   20 $@10: %empty

   21 $@11: %empty

   22 $@12: %empty

   23 $@13: %empty

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR
   25          | VAR COLON

   26 $@14: %empty

   27 $@15: %empty

   28 IF_BLOCK: IF LB $@14 A_EXPN RB $@15 STATEMENTS

   29 ELSEIF_BLOCKS: ELSEIF_BLOCKS ELSEIF_BLOCK
   30              | %empty

   31 $@16: %empty

   32 $@17: %empty

   33 ELSEIF_BLOCK: ELSEIF LB $@16 A_EXPN RB $@17 STATEMENTS

   34 $@18: %empty

   35 ELSE_BLOCK: ELSE $@18 STATEMENTS

   36 $@19: %empty

   37 VAR_LIST: VAR $@19 COMA VAR_LIST
   38         | VAR

   39 TYPE: INT
   40     | CHAR
   41     | FLOAT
   42     | DOUBLE

   43 $@20: %empty

   44 WRITE_VAR_LIST: QUOTED_STRING $@20 COMA WRITE_VAR_LIST

   45 $@21: %empty

   46 WRITE_VAR_LIST: VAR $@21 COMA WRITE_VAR_LIST
   47               | QUOTED_STRING
   48               | VAR

   49 $@22: %empty

   50 READ_VAR_LIST: VAR $@22 COMA READ_VAR_LIST
   51              | VAR

   52 $@23: %empty

   53 A_EXPN: A_EXPN LAND $@23 A_EXPN

   54 $@24: %empty

   55 A_EXPN: A_EXPN LOR $@24 A_EXPN

   56 $@25: %empty

   57 A_EXPN: A_EXPN LEQ $@25 A_EXPN

   58 $@26: %empty

   59 A_EXPN: A_EXPN GT $@26 A_EXPN

   60 $@27: %empty

   61 A_EXPN: A_EXPN LT $@27 A_EXPN

   62 $@28: %empty

   63 A_EXPN: A_EXPN NEQ $@28 A_EXPN

   64 $@29: %empty

   65 A_EXPN: A_EXPN DEQ $@29 A_EXPN

   66 $@30: %empty

   67 A_EXPN: NOT $@30 A_EXPN

   68 $@31: %empty

   69 A_EXPN: A_EXPN PLUS $@31 A_EXPN

   70 $@32: %empty

   71 A_EXPN: A_EXPN MINUS $@32 A_EXPN

   72 $@33: %empty

   73 A_EXPN: A_EXPN MUL $@33 A_EXPN

   74 $@34: %empty

   75 A_EXPN: A_EXPN DIV $@34 A_EXPN

   76 $@35: %empty

   77 A_EXPN: A_EXPN MOD $@35 A_EXPN
   78       | TERMINALS

   79 TERMINALS: VAR
   80          | NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 80
PROC (259) 2
MAIN (260) 2
BGIN (261) 2
COLON (262) 2 6 25
END (263) 2
ASSIGNMENT (264) 9
VAR_START (265) 6
COMA (266) 37 44 46 50
SEMICOLON (267) 6 9 10 11 16
VAR (268) 9 16 24 25 37 38 46 48 50 51 79
READ (269) 10
LB (270) 10 11 24 28 33
RB (271) 10 11 24 28 33
WRITE (272) 11
QUOTED_STRING (273) 44 47
IF (274) 28
ELSE (275) 35
ENDIF (276) 12 13
GEQ (277)
LEQ (278) 57
GT (279) 59
LT (280) 61
NEQ (281) 63
DEQ (282) 65
NOT (283) 67
LAND (284) 53
LOR (285) 55
GOTO (286) 16
ELSEIF (287) 33
FOR (288) 24
TO (289) 24
DO (290) 24
ENDFOR (291) 24
ARROW_ASSIGNMENT (292) 24
PLUS (293) 69
MINUS (294) 71
MUL (295) 73
DIV (296) 75
MOD (297) 77
INT (298) 39
CHAR (299) 40
FLOAT (300) 41
DOUBLE (301) 42


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
prm (48)
    on left: 2, on right: 0
$@1 (49)
    on left: 1, on right: 2
STATEMENTS (50)
    on left: 4 5, on right: 2 4 24 28 33 35
$@2 (51)
    on left: 3, on right: 4
STATEMENT (52)
    on left: 6 9 10 11 12 13 16 24 25, on right: 4
$@3 (53)
    on left: 7, on right: 9
$@4 (54)
    on left: 8, on right: 9
$@5 (55)
    on left: 14, on right: 16
$@6 (56)
    on left: 15, on right: 16
$@7 (57)
    on left: 17, on right: 24
$@8 (58)
    on left: 18, on right: 24
$@9 (59)
    on left: 19, on right: 24
$@10 (60)
    on left: 20, on right: 24
$@11 (61)
    on left: 21, on right: 24
$@12 (62)
    on left: 22, on right: 24
$@13 (63)
    on left: 23, on right: 24
IF_BLOCK (64)
    on left: 28, on right: 12 13
$@14 (65)
    on left: 26, on right: 28
$@15 (66)
    on left: 27, on right: 28
ELSEIF_BLOCKS (67)
    on left: 29 30, on right: 12 29
ELSEIF_BLOCK (68)
    on left: 33, on right: 29
$@16 (69)
    on left: 31, on right: 33
$@17 (70)
    on left: 32, on right: 33
ELSE_BLOCK (71)
    on left: 35, on right: 12
$@18 (72)
    on left: 34, on right: 35
VAR_LIST (73)
    on left: 37 38, on right: 6 37
$@19 (74)
    on left: 36, on right: 37
TYPE (75)
    on left: 39 40 41 42, on right: 6
WRITE_VAR_LIST (76)
    on left: 44 46 47 48, on right: 11 44 46
$@20 (77)
    on left: 43, on right: 44
$@21 (78)
    on left: 45, on right: 46
READ_VAR_LIST (79)
    on left: 50 51, on right: 10 50
$@22 (80)
    on left: 49, on right: 50
A_EXPN (81)
    on left: 53 55 57 59 61 63 65 67 69 71 73 75 77 78, on right: 9
    24 28 33 53 55 57 59 61 63 65 67 69 71 73 75 77
$@23 (82)
    on left: 52, on right: 53
$@24 (83)
    on left: 54, on right: 55
$@25 (84)
    on left: 56, on right: 57
$@26 (85)
    on left: 58, on right: 59
$@27 (86)
    on left: 60, on right: 61
$@28 (87)
    on left: 62, on right: 63
$@29 (88)
    on left: 64, on right: 65
$@30 (89)
    on left: 66, on right: 67
$@31 (90)
    on left: 68, on right: 69
$@32 (91)
    on left: 70, on right: 71
$@33 (92)
    on left: 72, on right: 73
$@34 (93)
    on left: 74, on right: 75
$@35 (94)
    on left: 76, on right: 77
TERMINALS (95)
    on left: 79 80, on right: 24 78


State 0

    0 $accept: . prm $end

    PROC  shift, and go to state 1

    prm  go to state 2


State 1

    2 prm: PROC . MAIN BGIN COLON $@1 STATEMENTS END COLON

    MAIN  shift, and go to state 3


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 4


State 3

    2 prm: PROC MAIN . BGIN COLON $@1 STATEMENTS END COLON

    BGIN  shift, and go to state 5


State 4

    0 $accept: prm $end .

    $default  accept


State 5

    2 prm: PROC MAIN BGIN . COLON $@1 STATEMENTS END COLON

    COLON  shift, and go to state 6


State 6

    2 prm: PROC MAIN BGIN COLON . $@1 STATEMENTS END COLON

    $default  reduce using rule 1 ($@1)

    $@1  go to state 7


State 7

    2 prm: PROC MAIN BGIN COLON $@1 . STATEMENTS END COLON

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 8


State 8

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS . END COLON
    4 STATEMENTS: STATEMENTS . $@2 STATEMENT

    END  shift, and go to state 9

    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 9

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS END . COLON

    COLON  shift, and go to state 11


State 10

    4 STATEMENTS: STATEMENTS $@2 . STATEMENT

    VAR_START  shift, and go to state 12
    VAR        shift, and go to state 13
    READ       shift, and go to state 14
    WRITE      shift, and go to state 15
    IF         shift, and go to state 16
    GOTO       shift, and go to state 17
    FOR        shift, and go to state 18

    STATEMENT  go to state 19
    IF_BLOCK   go to state 20


State 11

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS END COLON .

    $default  reduce using rule 2 (prm)


State 12

    6 STATEMENT: VAR_START . VAR_LIST COLON TYPE SEMICOLON

    VAR  shift, and go to state 21

    VAR_LIST  go to state 22


State 13

    9 STATEMENT: VAR . $@3 ASSIGNMENT $@4 A_EXPN SEMICOLON
   25          | VAR . COLON

    COLON  shift, and go to state 23

    $default  reduce using rule 7 ($@3)

    $@3  go to state 24


State 14

   10 STATEMENT: READ . LB READ_VAR_LIST RB SEMICOLON

    LB  shift, and go to state 25


State 15

   11 STATEMENT: WRITE . LB WRITE_VAR_LIST RB SEMICOLON

    LB  shift, and go to state 26


State 16

   28 IF_BLOCK: IF . LB $@14 A_EXPN RB $@15 STATEMENTS

    LB  shift, and go to state 27


State 17

   16 STATEMENT: GOTO . $@5 VAR $@6 SEMICOLON

    $default  reduce using rule 14 ($@5)

    $@5  go to state 28


State 18

   24 STATEMENT: FOR . LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    LB  shift, and go to state 29


State 19

    4 STATEMENTS: STATEMENTS $@2 STATEMENT .

    $default  reduce using rule 4 (STATEMENTS)


State 20

   12 STATEMENT: IF_BLOCK . ELSEIF_BLOCKS ELSE_BLOCK ENDIF
   13          | IF_BLOCK . ENDIF

    ENDIF  shift, and go to state 30

    $default  reduce using rule 30 (ELSEIF_BLOCKS)

    ELSEIF_BLOCKS  go to state 31


State 21

   37 VAR_LIST: VAR . $@19 COMA VAR_LIST
   38         | VAR .

    COLON     reduce using rule 38 (VAR_LIST)
    $default  reduce using rule 36 ($@19)

    $@19  go to state 32


State 22

    6 STATEMENT: VAR_START VAR_LIST . COLON TYPE SEMICOLON

    COLON  shift, and go to state 33


State 23

   25 STATEMENT: VAR COLON .

    $default  reduce using rule 25 (STATEMENT)


State 24

    9 STATEMENT: VAR $@3 . ASSIGNMENT $@4 A_EXPN SEMICOLON

    ASSIGNMENT  shift, and go to state 34


State 25

   10 STATEMENT: READ LB . READ_VAR_LIST RB SEMICOLON

    VAR  shift, and go to state 35

    READ_VAR_LIST  go to state 36


State 26

   11 STATEMENT: WRITE LB . WRITE_VAR_LIST RB SEMICOLON

    VAR            shift, and go to state 37
    QUOTED_STRING  shift, and go to state 38

    WRITE_VAR_LIST  go to state 39


State 27

   28 IF_BLOCK: IF LB . $@14 A_EXPN RB $@15 STATEMENTS

    $default  reduce using rule 26 ($@14)

    $@14  go to state 40


State 28

   16 STATEMENT: GOTO $@5 . VAR $@6 SEMICOLON

    VAR  shift, and go to state 41


State 29

   24 STATEMENT: FOR LB . $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    $default  reduce using rule 17 ($@7)

    $@7  go to state 42


State 30

   13 STATEMENT: IF_BLOCK ENDIF .

    $default  reduce using rule 13 (STATEMENT)


State 31

   12 STATEMENT: IF_BLOCK ELSEIF_BLOCKS . ELSE_BLOCK ENDIF
   29 ELSEIF_BLOCKS: ELSEIF_BLOCKS . ELSEIF_BLOCK

    ELSE    shift, and go to state 43
    ELSEIF  shift, and go to state 44

    ELSEIF_BLOCK  go to state 45
    ELSE_BLOCK    go to state 46


State 32

   37 VAR_LIST: VAR $@19 . COMA VAR_LIST

    COMA  shift, and go to state 47


State 33

    6 STATEMENT: VAR_START VAR_LIST COLON . TYPE SEMICOLON

    INT     shift, and go to state 48
    CHAR    shift, and go to state 49
    FLOAT   shift, and go to state 50
    DOUBLE  shift, and go to state 51

    TYPE  go to state 52


State 34

    9 STATEMENT: VAR $@3 ASSIGNMENT . $@4 A_EXPN SEMICOLON

    $default  reduce using rule 8 ($@4)

    $@4  go to state 53


State 35

   50 READ_VAR_LIST: VAR . $@22 COMA READ_VAR_LIST
   51              | VAR .

    RB        reduce using rule 51 (READ_VAR_LIST)
    $default  reduce using rule 49 ($@22)

    $@22  go to state 54


State 36

   10 STATEMENT: READ LB READ_VAR_LIST . RB SEMICOLON

    RB  shift, and go to state 55


State 37

   46 WRITE_VAR_LIST: VAR . $@21 COMA WRITE_VAR_LIST
   48               | VAR .

    RB        reduce using rule 48 (WRITE_VAR_LIST)
    $default  reduce using rule 45 ($@21)

    $@21  go to state 56


State 38

   44 WRITE_VAR_LIST: QUOTED_STRING . $@20 COMA WRITE_VAR_LIST
   47               | QUOTED_STRING .

    RB        reduce using rule 47 (WRITE_VAR_LIST)
    $default  reduce using rule 43 ($@20)

    $@20  go to state 57


State 39

   11 STATEMENT: WRITE LB WRITE_VAR_LIST . RB SEMICOLON

    RB  shift, and go to state 58


State 40

   28 IF_BLOCK: IF LB $@14 . A_EXPN RB $@15 STATEMENTS

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 62
    TERMINALS  go to state 63


State 41

   16 STATEMENT: GOTO $@5 VAR . $@6 SEMICOLON

    $default  reduce using rule 15 ($@6)

    $@6  go to state 64


State 42

   24 STATEMENT: FOR LB $@7 . VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    VAR  shift, and go to state 65


State 43

   35 ELSE_BLOCK: ELSE . $@18 STATEMENTS

    $default  reduce using rule 34 ($@18)

    $@18  go to state 66


State 44

   33 ELSEIF_BLOCK: ELSEIF . LB $@16 A_EXPN RB $@17 STATEMENTS

    LB  shift, and go to state 67


State 45

   29 ELSEIF_BLOCKS: ELSEIF_BLOCKS ELSEIF_BLOCK .

    $default  reduce using rule 29 (ELSEIF_BLOCKS)


State 46

   12 STATEMENT: IF_BLOCK ELSEIF_BLOCKS ELSE_BLOCK . ENDIF

    ENDIF  shift, and go to state 68


State 47

   37 VAR_LIST: VAR $@19 COMA . VAR_LIST

    VAR  shift, and go to state 21

    VAR_LIST  go to state 69


State 48

   39 TYPE: INT .

    $default  reduce using rule 39 (TYPE)


State 49

   40 TYPE: CHAR .

    $default  reduce using rule 40 (TYPE)


State 50

   41 TYPE: FLOAT .

    $default  reduce using rule 41 (TYPE)


State 51

   42 TYPE: DOUBLE .

    $default  reduce using rule 42 (TYPE)


State 52

    6 STATEMENT: VAR_START VAR_LIST COLON TYPE . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 53

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 . A_EXPN SEMICOLON

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 71
    TERMINALS  go to state 63


State 54

   50 READ_VAR_LIST: VAR $@22 . COMA READ_VAR_LIST

    COMA  shift, and go to state 72


State 55

   10 STATEMENT: READ LB READ_VAR_LIST RB . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 56

   46 WRITE_VAR_LIST: VAR $@21 . COMA WRITE_VAR_LIST

    COMA  shift, and go to state 74


State 57

   44 WRITE_VAR_LIST: QUOTED_STRING $@20 . COMA WRITE_VAR_LIST

    COMA  shift, and go to state 75


State 58

   11 STATEMENT: WRITE LB WRITE_VAR_LIST RB . SEMICOLON

    SEMICOLON  shift, and go to state 76


State 59

   80 TERMINALS: NUMBER .

    $default  reduce using rule 80 (TERMINALS)


State 60

   79 TERMINALS: VAR .

    $default  reduce using rule 79 (TERMINALS)


State 61

   67 A_EXPN: NOT . $@30 A_EXPN

    $default  reduce using rule 66 ($@30)

    $@30  go to state 77


State 62

   28 IF_BLOCK: IF LB $@14 A_EXPN . RB $@15 STATEMENTS
   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN

    RB     shift, and go to state 78
    LEQ    shift, and go to state 79
    GT     shift, and go to state 80
    LT     shift, and go to state 81
    NEQ    shift, and go to state 82
    DEQ    shift, and go to state 83
    LAND   shift, and go to state 84
    LOR    shift, and go to state 85
    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87
    MUL    shift, and go to state 88
    DIV    shift, and go to state 89
    MOD    shift, and go to state 90


State 63

   78 A_EXPN: TERMINALS .

    $default  reduce using rule 78 (A_EXPN)


State 64

   16 STATEMENT: GOTO $@5 VAR $@6 . SEMICOLON

    SEMICOLON  shift, and go to state 91


State 65

   24 STATEMENT: FOR LB $@7 VAR . $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    $default  reduce using rule 18 ($@8)

    $@8  go to state 92


State 66

   35 ELSE_BLOCK: ELSE $@18 . STATEMENTS

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 93


State 67

   33 ELSEIF_BLOCK: ELSEIF LB . $@16 A_EXPN RB $@17 STATEMENTS

    $default  reduce using rule 31 ($@16)

    $@16  go to state 94


State 68

   12 STATEMENT: IF_BLOCK ELSEIF_BLOCKS ELSE_BLOCK ENDIF .

    $default  reduce using rule 12 (STATEMENT)


State 69

   37 VAR_LIST: VAR $@19 COMA VAR_LIST .

    $default  reduce using rule 37 (VAR_LIST)


State 70

    6 STATEMENT: VAR_START VAR_LIST COLON TYPE SEMICOLON .

    $default  reduce using rule 6 (STATEMENT)


State 71

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 A_EXPN . SEMICOLON
   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN

    SEMICOLON  shift, and go to state 95
    LEQ        shift, and go to state 79
    GT         shift, and go to state 80
    LT         shift, and go to state 81
    NEQ        shift, and go to state 82
    DEQ        shift, and go to state 83
    LAND       shift, and go to state 84
    LOR        shift, and go to state 85
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    MOD        shift, and go to state 90


State 72

   50 READ_VAR_LIST: VAR $@22 COMA . READ_VAR_LIST

    VAR  shift, and go to state 35

    READ_VAR_LIST  go to state 96


State 73

   10 STATEMENT: READ LB READ_VAR_LIST RB SEMICOLON .

    $default  reduce using rule 10 (STATEMENT)


State 74

   46 WRITE_VAR_LIST: VAR $@21 COMA . WRITE_VAR_LIST

    VAR            shift, and go to state 37
    QUOTED_STRING  shift, and go to state 38

    WRITE_VAR_LIST  go to state 97


State 75

   44 WRITE_VAR_LIST: QUOTED_STRING $@20 COMA . WRITE_VAR_LIST

    VAR            shift, and go to state 37
    QUOTED_STRING  shift, and go to state 38

    WRITE_VAR_LIST  go to state 98


State 76

   11 STATEMENT: WRITE LB WRITE_VAR_LIST RB SEMICOLON .

    $default  reduce using rule 11 (STATEMENT)


State 77

   67 A_EXPN: NOT $@30 . A_EXPN

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 99
    TERMINALS  go to state 63


State 78

   28 IF_BLOCK: IF LB $@14 A_EXPN RB . $@15 STATEMENTS

    $default  reduce using rule 27 ($@15)

    $@15  go to state 100


State 79

   57 A_EXPN: A_EXPN LEQ . $@25 A_EXPN

    $default  reduce using rule 56 ($@25)

    $@25  go to state 101


State 80

   59 A_EXPN: A_EXPN GT . $@26 A_EXPN

    $default  reduce using rule 58 ($@26)

    $@26  go to state 102


State 81

   61 A_EXPN: A_EXPN LT . $@27 A_EXPN

    $default  reduce using rule 60 ($@27)

    $@27  go to state 103


State 82

   63 A_EXPN: A_EXPN NEQ . $@28 A_EXPN

    $default  reduce using rule 62 ($@28)

    $@28  go to state 104


State 83

   65 A_EXPN: A_EXPN DEQ . $@29 A_EXPN

    $default  reduce using rule 64 ($@29)

    $@29  go to state 105


State 84

   53 A_EXPN: A_EXPN LAND . $@23 A_EXPN

    $default  reduce using rule 52 ($@23)

    $@23  go to state 106


State 85

   55 A_EXPN: A_EXPN LOR . $@24 A_EXPN

    $default  reduce using rule 54 ($@24)

    $@24  go to state 107


State 86

   69 A_EXPN: A_EXPN PLUS . $@31 A_EXPN

    $default  reduce using rule 68 ($@31)

    $@31  go to state 108


State 87

   71 A_EXPN: A_EXPN MINUS . $@32 A_EXPN

    $default  reduce using rule 70 ($@32)

    $@32  go to state 109


State 88

   73 A_EXPN: A_EXPN MUL . $@33 A_EXPN

    $default  reduce using rule 72 ($@33)

    $@33  go to state 110


State 89

   75 A_EXPN: A_EXPN DIV . $@34 A_EXPN

    $default  reduce using rule 74 ($@34)

    $@34  go to state 111


State 90

   77 A_EXPN: A_EXPN MOD . $@35 A_EXPN

    $default  reduce using rule 76 ($@35)

    $@35  go to state 112


State 91

   16 STATEMENT: GOTO $@5 VAR $@6 SEMICOLON .

    $default  reduce using rule 16 (STATEMENT)


State 92

   24 STATEMENT: FOR LB $@7 VAR $@8 . ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    ARROW_ASSIGNMENT  shift, and go to state 113


State 93

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   35 ELSE_BLOCK: ELSE $@18 STATEMENTS .

    ENDIF     reduce using rule 35 (ELSE_BLOCK)
    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 94

   33 ELSEIF_BLOCK: ELSEIF LB $@16 . A_EXPN RB $@17 STATEMENTS

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 114
    TERMINALS  go to state 63


State 95

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 A_EXPN SEMICOLON .

    $default  reduce using rule 9 (STATEMENT)


State 96

   50 READ_VAR_LIST: VAR $@22 COMA READ_VAR_LIST .

    $default  reduce using rule 50 (READ_VAR_LIST)


State 97

   46 WRITE_VAR_LIST: VAR $@21 COMA WRITE_VAR_LIST .

    $default  reduce using rule 46 (WRITE_VAR_LIST)


State 98

   44 WRITE_VAR_LIST: QUOTED_STRING $@20 COMA WRITE_VAR_LIST .

    $default  reduce using rule 44 (WRITE_VAR_LIST)


State 99

   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   67       | NOT $@30 A_EXPN .
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN

    $default  reduce using rule 67 (A_EXPN)


State 100

   28 IF_BLOCK: IF LB $@14 A_EXPN RB $@15 . STATEMENTS

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 115


State 101

   57 A_EXPN: A_EXPN LEQ $@25 . A_EXPN

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 116
    TERMINALS  go to state 63


State 102

   59 A_EXPN: A_EXPN GT $@26 . A_EXPN

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 117
    TERMINALS  go to state 63


State 103

   61 A_EXPN: A_EXPN LT $@27 . A_EXPN

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 118
    TERMINALS  go to state 63


State 104

   63 A_EXPN: A_EXPN NEQ $@28 . A_EXPN

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 119
    TERMINALS  go to state 63


State 105

   65 A_EXPN: A_EXPN DEQ $@29 . A_EXPN

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 120
    TERMINALS  go to state 63


State 106

   53 A_EXPN: A_EXPN LAND $@23 . A_EXPN

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 121
    TERMINALS  go to state 63


State 107

   55 A_EXPN: A_EXPN LOR $@24 . A_EXPN

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 122
    TERMINALS  go to state 63


State 108

   69 A_EXPN: A_EXPN PLUS $@31 . A_EXPN

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 123
    TERMINALS  go to state 63


State 109

   71 A_EXPN: A_EXPN MINUS $@32 . A_EXPN

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 124
    TERMINALS  go to state 63


State 110

   73 A_EXPN: A_EXPN MUL $@33 . A_EXPN

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 125
    TERMINALS  go to state 63


State 111

   75 A_EXPN: A_EXPN DIV $@34 . A_EXPN

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 126
    TERMINALS  go to state 63


State 112

   77 A_EXPN: A_EXPN MOD $@35 . A_EXPN

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 127
    TERMINALS  go to state 63


State 113

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT . $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    $default  reduce using rule 19 ($@9)

    $@9  go to state 128


State 114

   33 ELSEIF_BLOCK: ELSEIF LB $@16 A_EXPN . RB $@17 STATEMENTS
   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN

    RB     shift, and go to state 129
    LEQ    shift, and go to state 79
    GT     shift, and go to state 80
    LT     shift, and go to state 81
    NEQ    shift, and go to state 82
    DEQ    shift, and go to state 83
    LAND   shift, and go to state 84
    LOR    shift, and go to state 85
    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87
    MUL    shift, and go to state 88
    DIV    shift, and go to state 89
    MOD    shift, and go to state 90


State 115

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   28 IF_BLOCK: IF LB $@14 A_EXPN RB $@15 STATEMENTS .

    ELSE      reduce using rule 28 (IF_BLOCK)
    ENDIF     reduce using rule 28 (IF_BLOCK)
    ELSEIF    reduce using rule 28 (IF_BLOCK)
    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 116

   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   57       | A_EXPN LEQ $@25 A_EXPN .
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN

    $default  reduce using rule 57 (A_EXPN)


State 117

   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   59       | A_EXPN GT $@26 A_EXPN .
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN

    $default  reduce using rule 59 (A_EXPN)


State 118

   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   61       | A_EXPN LT $@27 A_EXPN .
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN

    $default  reduce using rule 61 (A_EXPN)


State 119

   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   63       | A_EXPN NEQ $@28 A_EXPN .
   65       | A_EXPN . DEQ $@29 A_EXPN
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN

    $default  reduce using rule 63 (A_EXPN)


State 120

   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   65       | A_EXPN DEQ $@29 A_EXPN .
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN

    $default  reduce using rule 65 (A_EXPN)


State 121

   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   53       | A_EXPN LAND $@23 A_EXPN .
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN

    $default  reduce using rule 53 (A_EXPN)


State 122

   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   55       | A_EXPN LOR $@24 A_EXPN .
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN

    $default  reduce using rule 55 (A_EXPN)


State 123

   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   69       | A_EXPN . PLUS $@31 A_EXPN
   69       | A_EXPN PLUS $@31 A_EXPN .
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN

    $default  reduce using rule 69 (A_EXPN)


State 124

   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   71       | A_EXPN MINUS $@32 A_EXPN .
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN

    $default  reduce using rule 71 (A_EXPN)


State 125

   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   73       | A_EXPN MUL $@33 A_EXPN .
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN

    $default  reduce using rule 73 (A_EXPN)


State 126

   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   75       | A_EXPN DIV $@34 A_EXPN .
   77       | A_EXPN . MOD $@35 A_EXPN

    $default  reduce using rule 75 (A_EXPN)


State 127

   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN
   77       | A_EXPN MOD $@35 A_EXPN .

    $default  reduce using rule 77 (A_EXPN)


State 128

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 . TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60

    TERMINALS  go to state 130


State 129

   33 ELSEIF_BLOCK: ELSEIF LB $@16 A_EXPN RB . $@17 STATEMENTS

    $default  reduce using rule 32 ($@17)

    $@17  go to state 131


State 130

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS . $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    $default  reduce using rule 20 ($@10)

    $@10  go to state 132


State 131

   33 ELSEIF_BLOCK: ELSEIF LB $@16 A_EXPN RB $@17 . STATEMENTS

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 133


State 132

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 . TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    TO  shift, and go to state 134


State 133

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   33 ELSEIF_BLOCK: ELSEIF LB $@16 A_EXPN RB $@17 STATEMENTS .

    ELSE      reduce using rule 33 (ELSEIF_BLOCK)
    ELSEIF    reduce using rule 33 (ELSEIF_BLOCK)
    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 134

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO . $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    $default  reduce using rule 21 ($@11)

    $@11  go to state 135


State 135

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 . A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    NUMBER  shift, and go to state 59
    VAR     shift, and go to state 60
    NOT     shift, and go to state 61

    A_EXPN     go to state 136
    TERMINALS  go to state 63


State 136

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN . $@12 RB DO $@13 STATEMENTS ENDFOR
   53 A_EXPN: A_EXPN . LAND $@23 A_EXPN
   55       | A_EXPN . LOR $@24 A_EXPN
   57       | A_EXPN . LEQ $@25 A_EXPN
   59       | A_EXPN . GT $@26 A_EXPN
   61       | A_EXPN . LT $@27 A_EXPN
   63       | A_EXPN . NEQ $@28 A_EXPN
   65       | A_EXPN . DEQ $@29 A_EXPN
   69       | A_EXPN . PLUS $@31 A_EXPN
   71       | A_EXPN . MINUS $@32 A_EXPN
   73       | A_EXPN . MUL $@33 A_EXPN
   75       | A_EXPN . DIV $@34 A_EXPN
   77       | A_EXPN . MOD $@35 A_EXPN

    LEQ    shift, and go to state 79
    GT     shift, and go to state 80
    LT     shift, and go to state 81
    NEQ    shift, and go to state 82
    DEQ    shift, and go to state 83
    LAND   shift, and go to state 84
    LOR    shift, and go to state 85
    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87
    MUL    shift, and go to state 88
    DIV    shift, and go to state 89
    MOD    shift, and go to state 90

    $default  reduce using rule 22 ($@12)

    $@12  go to state 137


State 137

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 . RB DO $@13 STATEMENTS ENDFOR

    RB  shift, and go to state 138


State 138

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB . DO $@13 STATEMENTS ENDFOR

    DO  shift, and go to state 139


State 139

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO . $@13 STATEMENTS ENDFOR

    $default  reduce using rule 23 ($@13)

    $@13  go to state 140


State 140

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 . STATEMENTS ENDFOR

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 141


State 141

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS . ENDFOR

    ENDFOR  shift, and go to state 142

    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 142

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR .

    $default  reduce using rule 24 (STATEMENT)
