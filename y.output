Terminals unused in grammar

   GEQ


Grammar

    0 $accept: prm $end

    1 $@1: %empty

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS END COLON

    3 $@2: %empty

    4 STATEMENTS: STATEMENTS $@2 STATEMENT
    5           | %empty

    6 STATEMENT: VAR_START VAR_LIST COLON TYPE SEMICOLON

    7 $@3: %empty

    8 $@4: %empty

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 A_EXPN SEMICOLON
   10          | READ LB READ_VAR_LIST RB SEMICOLON
   11          | WRITE LB WRITE_VAR_LIST RB SEMICOLON
   12          | IF_BLOCK ELSEIF_BLOCKS ELSE_BLOCK ENDIF
   13          | IF_BLOCK ENDIF

   14 $@5: %empty

   15 $@6: %empty

   16 STATEMENT: GOTO $@5 VAR $@6 SEMICOLON

   17 $@7: %empty

   18 $@8: %empty

   19 $@9: %empty

   20 $@10: %empty

   21 $@11: %empty

   22 $@12: %empty

   23 $@13: %empty

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

   25 $@14: %empty

   26 $@15: %empty

   27 STATEMENT: REPEAT $@14 STATEMENTS UNTIL LB $@15 A_EXPN RB
   28          | VAR COLON

   29 $@16: %empty

   30 $@17: %empty

   31 IF_BLOCK: IF LB $@16 A_EXPN RB $@17 STATEMENTS

   32 ELSEIF_BLOCKS: ELSEIF_BLOCKS ELSEIF_BLOCK
   33              | %empty

   34 $@18: %empty

   35 $@19: %empty

   36 ELSEIF_BLOCK: ELSEIF LB $@18 A_EXPN RB $@19 STATEMENTS

   37 $@20: %empty

   38 ELSE_BLOCK: ELSE $@20 STATEMENTS

   39 $@21: %empty

   40 VAR_LIST: VAR $@21 COMA VAR_LIST
   41         | VAR

   42 TYPE: INT
   43     | CHAR
   44     | FLOAT
   45     | DOUBLE

   46 $@22: %empty

   47 WRITE_VAR_LIST: QUOTED_STRING $@22 COMA WRITE_VAR_LIST

   48 $@23: %empty

   49 WRITE_VAR_LIST: VAR $@23 COMA WRITE_VAR_LIST
   50               | QUOTED_STRING
   51               | VAR

   52 $@24: %empty

   53 READ_VAR_LIST: VAR $@24 COMA READ_VAR_LIST
   54              | VAR

   55 $@25: %empty

   56 A_EXPN: A_EXPN LAND $@25 A_EXPN

   57 $@26: %empty

   58 A_EXPN: A_EXPN LOR $@26 A_EXPN

   59 $@27: %empty

   60 A_EXPN: A_EXPN LEQ $@27 A_EXPN

   61 $@28: %empty

   62 A_EXPN: A_EXPN GT $@28 A_EXPN

   63 $@29: %empty

   64 A_EXPN: A_EXPN LT $@29 A_EXPN

   65 $@30: %empty

   66 A_EXPN: A_EXPN NEQ $@30 A_EXPN

   67 $@31: %empty

   68 A_EXPN: A_EXPN DEQ $@31 A_EXPN

   69 $@32: %empty

   70 A_EXPN: NOT $@32 A_EXPN

   71 $@33: %empty

   72 A_EXPN: A_EXPN PLUS $@33 A_EXPN

   73 $@34: %empty

   74 A_EXPN: A_EXPN MINUS $@34 A_EXPN

   75 $@35: %empty

   76 A_EXPN: A_EXPN MUL $@35 A_EXPN

   77 $@36: %empty

   78 A_EXPN: A_EXPN DIV $@36 A_EXPN

   79 $@37: %empty

   80 A_EXPN: A_EXPN MOD $@37 A_EXPN
   81       | TERMINALS

   82 TERMINALS: VAR
   83          | NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 83
PROC (259) 2
MAIN (260) 2
BGIN (261) 2
COLON (262) 2 6 28
END (263) 2
ASSIGNMENT (264) 9
VAR_START (265) 6
COMA (266) 40 47 49 53
SEMICOLON (267) 6 9 10 11 16
VAR (268) 9 16 24 28 40 41 49 51 53 54 82
READ (269) 10
LB (270) 10 11 24 27 31 36
RB (271) 10 11 24 27 31 36
WRITE (272) 11
QUOTED_STRING (273) 47 50
IF (274) 31
ELSE (275) 38
ENDIF (276) 12 13
GEQ (277)
LEQ (278) 60
GT (279) 62
LT (280) 64
NEQ (281) 66
DEQ (282) 68
NOT (283) 70
LAND (284) 56
LOR (285) 58
GOTO (286) 16
ELSEIF (287) 36
FOR (288) 24
TO (289) 24
DO (290) 24
ENDFOR (291) 24
ARROW_ASSIGNMENT (292) 24
PLUS (293) 72
MINUS (294) 74
MUL (295) 76
DIV (296) 78
MOD (297) 80
REPEAT (298) 27
UNTIL (299) 27
INT (300) 42
CHAR (301) 43
FLOAT (302) 44
DOUBLE (303) 45


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
prm (50)
    on left: 2, on right: 0
$@1 (51)
    on left: 1, on right: 2
STATEMENTS (52)
    on left: 4 5, on right: 2 4 24 27 31 36 38
$@2 (53)
    on left: 3, on right: 4
STATEMENT (54)
    on left: 6 9 10 11 12 13 16 24 27 28, on right: 4
$@3 (55)
    on left: 7, on right: 9
$@4 (56)
    on left: 8, on right: 9
$@5 (57)
    on left: 14, on right: 16
$@6 (58)
    on left: 15, on right: 16
$@7 (59)
    on left: 17, on right: 24
$@8 (60)
    on left: 18, on right: 24
$@9 (61)
    on left: 19, on right: 24
$@10 (62)
    on left: 20, on right: 24
$@11 (63)
    on left: 21, on right: 24
$@12 (64)
    on left: 22, on right: 24
$@13 (65)
    on left: 23, on right: 24
$@14 (66)
    on left: 25, on right: 27
$@15 (67)
    on left: 26, on right: 27
IF_BLOCK (68)
    on left: 31, on right: 12 13
$@16 (69)
    on left: 29, on right: 31
$@17 (70)
    on left: 30, on right: 31
ELSEIF_BLOCKS (71)
    on left: 32 33, on right: 12 32
ELSEIF_BLOCK (72)
    on left: 36, on right: 32
$@18 (73)
    on left: 34, on right: 36
$@19 (74)
    on left: 35, on right: 36
ELSE_BLOCK (75)
    on left: 38, on right: 12
$@20 (76)
    on left: 37, on right: 38
VAR_LIST (77)
    on left: 40 41, on right: 6 40
$@21 (78)
    on left: 39, on right: 40
TYPE (79)
    on left: 42 43 44 45, on right: 6
WRITE_VAR_LIST (80)
    on left: 47 49 50 51, on right: 11 47 49
$@22 (81)
    on left: 46, on right: 47
$@23 (82)
    on left: 48, on right: 49
READ_VAR_LIST (83)
    on left: 53 54, on right: 10 53
$@24 (84)
    on left: 52, on right: 53
A_EXPN (85)
    on left: 56 58 60 62 64 66 68 70 72 74 76 78 80 81, on right: 9
    24 27 31 36 56 58 60 62 64 66 68 70 72 74 76 78 80
$@25 (86)
    on left: 55, on right: 56
$@26 (87)
    on left: 57, on right: 58
$@27 (88)
    on left: 59, on right: 60
$@28 (89)
    on left: 61, on right: 62
$@29 (90)
    on left: 63, on right: 64
$@30 (91)
    on left: 65, on right: 66
$@31 (92)
    on left: 67, on right: 68
$@32 (93)
    on left: 69, on right: 70
$@33 (94)
    on left: 71, on right: 72
$@34 (95)
    on left: 73, on right: 74
$@35 (96)
    on left: 75, on right: 76
$@36 (97)
    on left: 77, on right: 78
$@37 (98)
    on left: 79, on right: 80
TERMINALS (99)
    on left: 82 83, on right: 24 81


State 0

    0 $accept: . prm $end

    PROC  shift, and go to state 1

    prm  go to state 2


State 1

    2 prm: PROC . MAIN BGIN COLON $@1 STATEMENTS END COLON

    MAIN  shift, and go to state 3


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 4


State 3

    2 prm: PROC MAIN . BGIN COLON $@1 STATEMENTS END COLON

    BGIN  shift, and go to state 5


State 4

    0 $accept: prm $end .

    $default  accept


State 5

    2 prm: PROC MAIN BGIN . COLON $@1 STATEMENTS END COLON

    COLON  shift, and go to state 6


State 6

    2 prm: PROC MAIN BGIN COLON . $@1 STATEMENTS END COLON

    $default  reduce using rule 1 ($@1)

    $@1  go to state 7


State 7

    2 prm: PROC MAIN BGIN COLON $@1 . STATEMENTS END COLON

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 8


State 8

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS . END COLON
    4 STATEMENTS: STATEMENTS . $@2 STATEMENT

    END  shift, and go to state 9

    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 9

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS END . COLON

    COLON  shift, and go to state 11


State 10

    4 STATEMENTS: STATEMENTS $@2 . STATEMENT

    VAR_START  shift, and go to state 12
    VAR        shift, and go to state 13
    READ       shift, and go to state 14
    WRITE      shift, and go to state 15
    IF         shift, and go to state 16
    GOTO       shift, and go to state 17
    FOR        shift, and go to state 18
    REPEAT     shift, and go to state 19

    STATEMENT  go to state 20
    IF_BLOCK   go to state 21


State 11

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS END COLON .

    $default  reduce using rule 2 (prm)


State 12

    6 STATEMENT: VAR_START . VAR_LIST COLON TYPE SEMICOLON

    VAR  shift, and go to state 22

    VAR_LIST  go to state 23


State 13

    9 STATEMENT: VAR . $@3 ASSIGNMENT $@4 A_EXPN SEMICOLON
   28          | VAR . COLON

    COLON  shift, and go to state 24

    $default  reduce using rule 7 ($@3)

    $@3  go to state 25


State 14

   10 STATEMENT: READ . LB READ_VAR_LIST RB SEMICOLON

    LB  shift, and go to state 26


State 15

   11 STATEMENT: WRITE . LB WRITE_VAR_LIST RB SEMICOLON

    LB  shift, and go to state 27


State 16

   31 IF_BLOCK: IF . LB $@16 A_EXPN RB $@17 STATEMENTS

    LB  shift, and go to state 28


State 17

   16 STATEMENT: GOTO . $@5 VAR $@6 SEMICOLON

    $default  reduce using rule 14 ($@5)

    $@5  go to state 29


State 18

   24 STATEMENT: FOR . LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    LB  shift, and go to state 30


State 19

   27 STATEMENT: REPEAT . $@14 STATEMENTS UNTIL LB $@15 A_EXPN RB

    $default  reduce using rule 25 ($@14)

    $@14  go to state 31


State 20

    4 STATEMENTS: STATEMENTS $@2 STATEMENT .

    $default  reduce using rule 4 (STATEMENTS)


State 21

   12 STATEMENT: IF_BLOCK . ELSEIF_BLOCKS ELSE_BLOCK ENDIF
   13          | IF_BLOCK . ENDIF

    ENDIF  shift, and go to state 32

    $default  reduce using rule 33 (ELSEIF_BLOCKS)

    ELSEIF_BLOCKS  go to state 33


State 22

   40 VAR_LIST: VAR . $@21 COMA VAR_LIST
   41         | VAR .

    COLON     reduce using rule 41 (VAR_LIST)
    $default  reduce using rule 39 ($@21)

    $@21  go to state 34


State 23

    6 STATEMENT: VAR_START VAR_LIST . COLON TYPE SEMICOLON

    COLON  shift, and go to state 35


State 24

   28 STATEMENT: VAR COLON .

    $default  reduce using rule 28 (STATEMENT)


State 25

    9 STATEMENT: VAR $@3 . ASSIGNMENT $@4 A_EXPN SEMICOLON

    ASSIGNMENT  shift, and go to state 36


State 26

   10 STATEMENT: READ LB . READ_VAR_LIST RB SEMICOLON

    VAR  shift, and go to state 37

    READ_VAR_LIST  go to state 38


State 27

   11 STATEMENT: WRITE LB . WRITE_VAR_LIST RB SEMICOLON

    VAR            shift, and go to state 39
    QUOTED_STRING  shift, and go to state 40

    WRITE_VAR_LIST  go to state 41


State 28

   31 IF_BLOCK: IF LB . $@16 A_EXPN RB $@17 STATEMENTS

    $default  reduce using rule 29 ($@16)

    $@16  go to state 42


State 29

   16 STATEMENT: GOTO $@5 . VAR $@6 SEMICOLON

    VAR  shift, and go to state 43


State 30

   24 STATEMENT: FOR LB . $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    $default  reduce using rule 17 ($@7)

    $@7  go to state 44


State 31

   27 STATEMENT: REPEAT $@14 . STATEMENTS UNTIL LB $@15 A_EXPN RB

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 45


State 32

   13 STATEMENT: IF_BLOCK ENDIF .

    $default  reduce using rule 13 (STATEMENT)


State 33

   12 STATEMENT: IF_BLOCK ELSEIF_BLOCKS . ELSE_BLOCK ENDIF
   32 ELSEIF_BLOCKS: ELSEIF_BLOCKS . ELSEIF_BLOCK

    ELSE    shift, and go to state 46
    ELSEIF  shift, and go to state 47

    ELSEIF_BLOCK  go to state 48
    ELSE_BLOCK    go to state 49


State 34

   40 VAR_LIST: VAR $@21 . COMA VAR_LIST

    COMA  shift, and go to state 50


State 35

    6 STATEMENT: VAR_START VAR_LIST COLON . TYPE SEMICOLON

    INT     shift, and go to state 51
    CHAR    shift, and go to state 52
    FLOAT   shift, and go to state 53
    DOUBLE  shift, and go to state 54

    TYPE  go to state 55


State 36

    9 STATEMENT: VAR $@3 ASSIGNMENT . $@4 A_EXPN SEMICOLON

    $default  reduce using rule 8 ($@4)

    $@4  go to state 56


State 37

   53 READ_VAR_LIST: VAR . $@24 COMA READ_VAR_LIST
   54              | VAR .

    RB        reduce using rule 54 (READ_VAR_LIST)
    $default  reduce using rule 52 ($@24)

    $@24  go to state 57


State 38

   10 STATEMENT: READ LB READ_VAR_LIST . RB SEMICOLON

    RB  shift, and go to state 58


State 39

   49 WRITE_VAR_LIST: VAR . $@23 COMA WRITE_VAR_LIST
   51               | VAR .

    RB        reduce using rule 51 (WRITE_VAR_LIST)
    $default  reduce using rule 48 ($@23)

    $@23  go to state 59


State 40

   47 WRITE_VAR_LIST: QUOTED_STRING . $@22 COMA WRITE_VAR_LIST
   50               | QUOTED_STRING .

    RB        reduce using rule 50 (WRITE_VAR_LIST)
    $default  reduce using rule 46 ($@22)

    $@22  go to state 60


State 41

   11 STATEMENT: WRITE LB WRITE_VAR_LIST . RB SEMICOLON

    RB  shift, and go to state 61


State 42

   31 IF_BLOCK: IF LB $@16 . A_EXPN RB $@17 STATEMENTS

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 65
    TERMINALS  go to state 66


State 43

   16 STATEMENT: GOTO $@5 VAR . $@6 SEMICOLON

    $default  reduce using rule 15 ($@6)

    $@6  go to state 67


State 44

   24 STATEMENT: FOR LB $@7 . VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    VAR  shift, and go to state 68


State 45

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   27 STATEMENT: REPEAT $@14 STATEMENTS . UNTIL LB $@15 A_EXPN RB

    UNTIL  shift, and go to state 69

    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 46

   38 ELSE_BLOCK: ELSE . $@20 STATEMENTS

    $default  reduce using rule 37 ($@20)

    $@20  go to state 70


State 47

   36 ELSEIF_BLOCK: ELSEIF . LB $@18 A_EXPN RB $@19 STATEMENTS

    LB  shift, and go to state 71


State 48

   32 ELSEIF_BLOCKS: ELSEIF_BLOCKS ELSEIF_BLOCK .

    $default  reduce using rule 32 (ELSEIF_BLOCKS)


State 49

   12 STATEMENT: IF_BLOCK ELSEIF_BLOCKS ELSE_BLOCK . ENDIF

    ENDIF  shift, and go to state 72


State 50

   40 VAR_LIST: VAR $@21 COMA . VAR_LIST

    VAR  shift, and go to state 22

    VAR_LIST  go to state 73


State 51

   42 TYPE: INT .

    $default  reduce using rule 42 (TYPE)


State 52

   43 TYPE: CHAR .

    $default  reduce using rule 43 (TYPE)


State 53

   44 TYPE: FLOAT .

    $default  reduce using rule 44 (TYPE)


State 54

   45 TYPE: DOUBLE .

    $default  reduce using rule 45 (TYPE)


State 55

    6 STATEMENT: VAR_START VAR_LIST COLON TYPE . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 56

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 . A_EXPN SEMICOLON

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 75
    TERMINALS  go to state 66


State 57

   53 READ_VAR_LIST: VAR $@24 . COMA READ_VAR_LIST

    COMA  shift, and go to state 76


State 58

   10 STATEMENT: READ LB READ_VAR_LIST RB . SEMICOLON

    SEMICOLON  shift, and go to state 77


State 59

   49 WRITE_VAR_LIST: VAR $@23 . COMA WRITE_VAR_LIST

    COMA  shift, and go to state 78


State 60

   47 WRITE_VAR_LIST: QUOTED_STRING $@22 . COMA WRITE_VAR_LIST

    COMA  shift, and go to state 79


State 61

   11 STATEMENT: WRITE LB WRITE_VAR_LIST RB . SEMICOLON

    SEMICOLON  shift, and go to state 80


State 62

   83 TERMINALS: NUMBER .

    $default  reduce using rule 83 (TERMINALS)


State 63

   82 TERMINALS: VAR .

    $default  reduce using rule 82 (TERMINALS)


State 64

   70 A_EXPN: NOT . $@32 A_EXPN

    $default  reduce using rule 69 ($@32)

    $@32  go to state 81


State 65

   31 IF_BLOCK: IF LB $@16 A_EXPN . RB $@17 STATEMENTS
   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    RB     shift, and go to state 82
    LEQ    shift, and go to state 83
    GT     shift, and go to state 84
    LT     shift, and go to state 85
    NEQ    shift, and go to state 86
    DEQ    shift, and go to state 87
    LAND   shift, and go to state 88
    LOR    shift, and go to state 89
    PLUS   shift, and go to state 90
    MINUS  shift, and go to state 91
    MUL    shift, and go to state 92
    DIV    shift, and go to state 93
    MOD    shift, and go to state 94


State 66

   81 A_EXPN: TERMINALS .

    $default  reduce using rule 81 (A_EXPN)


State 67

   16 STATEMENT: GOTO $@5 VAR $@6 . SEMICOLON

    SEMICOLON  shift, and go to state 95


State 68

   24 STATEMENT: FOR LB $@7 VAR . $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    $default  reduce using rule 18 ($@8)

    $@8  go to state 96


State 69

   27 STATEMENT: REPEAT $@14 STATEMENTS UNTIL . LB $@15 A_EXPN RB

    LB  shift, and go to state 97


State 70

   38 ELSE_BLOCK: ELSE $@20 . STATEMENTS

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 98


State 71

   36 ELSEIF_BLOCK: ELSEIF LB . $@18 A_EXPN RB $@19 STATEMENTS

    $default  reduce using rule 34 ($@18)

    $@18  go to state 99


State 72

   12 STATEMENT: IF_BLOCK ELSEIF_BLOCKS ELSE_BLOCK ENDIF .

    $default  reduce using rule 12 (STATEMENT)


State 73

   40 VAR_LIST: VAR $@21 COMA VAR_LIST .

    $default  reduce using rule 40 (VAR_LIST)


State 74

    6 STATEMENT: VAR_START VAR_LIST COLON TYPE SEMICOLON .

    $default  reduce using rule 6 (STATEMENT)


State 75

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 A_EXPN . SEMICOLON
   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    SEMICOLON  shift, and go to state 100
    LEQ        shift, and go to state 83
    GT         shift, and go to state 84
    LT         shift, and go to state 85
    NEQ        shift, and go to state 86
    DEQ        shift, and go to state 87
    LAND       shift, and go to state 88
    LOR        shift, and go to state 89
    PLUS       shift, and go to state 90
    MINUS      shift, and go to state 91
    MUL        shift, and go to state 92
    DIV        shift, and go to state 93
    MOD        shift, and go to state 94


State 76

   53 READ_VAR_LIST: VAR $@24 COMA . READ_VAR_LIST

    VAR  shift, and go to state 37

    READ_VAR_LIST  go to state 101


State 77

   10 STATEMENT: READ LB READ_VAR_LIST RB SEMICOLON .

    $default  reduce using rule 10 (STATEMENT)


State 78

   49 WRITE_VAR_LIST: VAR $@23 COMA . WRITE_VAR_LIST

    VAR            shift, and go to state 39
    QUOTED_STRING  shift, and go to state 40

    WRITE_VAR_LIST  go to state 102


State 79

   47 WRITE_VAR_LIST: QUOTED_STRING $@22 COMA . WRITE_VAR_LIST

    VAR            shift, and go to state 39
    QUOTED_STRING  shift, and go to state 40

    WRITE_VAR_LIST  go to state 103


State 80

   11 STATEMENT: WRITE LB WRITE_VAR_LIST RB SEMICOLON .

    $default  reduce using rule 11 (STATEMENT)


State 81

   70 A_EXPN: NOT $@32 . A_EXPN

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 104
    TERMINALS  go to state 66


State 82

   31 IF_BLOCK: IF LB $@16 A_EXPN RB . $@17 STATEMENTS

    $default  reduce using rule 30 ($@17)

    $@17  go to state 105


State 83

   60 A_EXPN: A_EXPN LEQ . $@27 A_EXPN

    $default  reduce using rule 59 ($@27)

    $@27  go to state 106


State 84

   62 A_EXPN: A_EXPN GT . $@28 A_EXPN

    $default  reduce using rule 61 ($@28)

    $@28  go to state 107


State 85

   64 A_EXPN: A_EXPN LT . $@29 A_EXPN

    $default  reduce using rule 63 ($@29)

    $@29  go to state 108


State 86

   66 A_EXPN: A_EXPN NEQ . $@30 A_EXPN

    $default  reduce using rule 65 ($@30)

    $@30  go to state 109


State 87

   68 A_EXPN: A_EXPN DEQ . $@31 A_EXPN

    $default  reduce using rule 67 ($@31)

    $@31  go to state 110


State 88

   56 A_EXPN: A_EXPN LAND . $@25 A_EXPN

    $default  reduce using rule 55 ($@25)

    $@25  go to state 111


State 89

   58 A_EXPN: A_EXPN LOR . $@26 A_EXPN

    $default  reduce using rule 57 ($@26)

    $@26  go to state 112


State 90

   72 A_EXPN: A_EXPN PLUS . $@33 A_EXPN

    $default  reduce using rule 71 ($@33)

    $@33  go to state 113


State 91

   74 A_EXPN: A_EXPN MINUS . $@34 A_EXPN

    $default  reduce using rule 73 ($@34)

    $@34  go to state 114


State 92

   76 A_EXPN: A_EXPN MUL . $@35 A_EXPN

    $default  reduce using rule 75 ($@35)

    $@35  go to state 115


State 93

   78 A_EXPN: A_EXPN DIV . $@36 A_EXPN

    $default  reduce using rule 77 ($@36)

    $@36  go to state 116


State 94

   80 A_EXPN: A_EXPN MOD . $@37 A_EXPN

    $default  reduce using rule 79 ($@37)

    $@37  go to state 117


State 95

   16 STATEMENT: GOTO $@5 VAR $@6 SEMICOLON .

    $default  reduce using rule 16 (STATEMENT)


State 96

   24 STATEMENT: FOR LB $@7 VAR $@8 . ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    ARROW_ASSIGNMENT  shift, and go to state 118


State 97

   27 STATEMENT: REPEAT $@14 STATEMENTS UNTIL LB . $@15 A_EXPN RB

    $default  reduce using rule 26 ($@15)

    $@15  go to state 119


State 98

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   38 ELSE_BLOCK: ELSE $@20 STATEMENTS .

    ENDIF     reduce using rule 38 (ELSE_BLOCK)
    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 99

   36 ELSEIF_BLOCK: ELSEIF LB $@18 . A_EXPN RB $@19 STATEMENTS

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 120
    TERMINALS  go to state 66


State 100

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 A_EXPN SEMICOLON .

    $default  reduce using rule 9 (STATEMENT)


State 101

   53 READ_VAR_LIST: VAR $@24 COMA READ_VAR_LIST .

    $default  reduce using rule 53 (READ_VAR_LIST)


State 102

   49 WRITE_VAR_LIST: VAR $@23 COMA WRITE_VAR_LIST .

    $default  reduce using rule 49 (WRITE_VAR_LIST)


State 103

   47 WRITE_VAR_LIST: QUOTED_STRING $@22 COMA WRITE_VAR_LIST .

    $default  reduce using rule 47 (WRITE_VAR_LIST)


State 104

   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   70       | NOT $@32 A_EXPN .
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    $default  reduce using rule 70 (A_EXPN)


State 105

   31 IF_BLOCK: IF LB $@16 A_EXPN RB $@17 . STATEMENTS

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 121


State 106

   60 A_EXPN: A_EXPN LEQ $@27 . A_EXPN

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 122
    TERMINALS  go to state 66


State 107

   62 A_EXPN: A_EXPN GT $@28 . A_EXPN

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 123
    TERMINALS  go to state 66


State 108

   64 A_EXPN: A_EXPN LT $@29 . A_EXPN

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 124
    TERMINALS  go to state 66


State 109

   66 A_EXPN: A_EXPN NEQ $@30 . A_EXPN

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 125
    TERMINALS  go to state 66


State 110

   68 A_EXPN: A_EXPN DEQ $@31 . A_EXPN

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 126
    TERMINALS  go to state 66


State 111

   56 A_EXPN: A_EXPN LAND $@25 . A_EXPN

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 127
    TERMINALS  go to state 66


State 112

   58 A_EXPN: A_EXPN LOR $@26 . A_EXPN

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 128
    TERMINALS  go to state 66


State 113

   72 A_EXPN: A_EXPN PLUS $@33 . A_EXPN

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 129
    TERMINALS  go to state 66


State 114

   74 A_EXPN: A_EXPN MINUS $@34 . A_EXPN

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 130
    TERMINALS  go to state 66


State 115

   76 A_EXPN: A_EXPN MUL $@35 . A_EXPN

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 131
    TERMINALS  go to state 66


State 116

   78 A_EXPN: A_EXPN DIV $@36 . A_EXPN

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 132
    TERMINALS  go to state 66


State 117

   80 A_EXPN: A_EXPN MOD $@37 . A_EXPN

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 133
    TERMINALS  go to state 66


State 118

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT . $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    $default  reduce using rule 19 ($@9)

    $@9  go to state 134


State 119

   27 STATEMENT: REPEAT $@14 STATEMENTS UNTIL LB $@15 . A_EXPN RB

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 135
    TERMINALS  go to state 66


State 120

   36 ELSEIF_BLOCK: ELSEIF LB $@18 A_EXPN . RB $@19 STATEMENTS
   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    RB     shift, and go to state 136
    LEQ    shift, and go to state 83
    GT     shift, and go to state 84
    LT     shift, and go to state 85
    NEQ    shift, and go to state 86
    DEQ    shift, and go to state 87
    LAND   shift, and go to state 88
    LOR    shift, and go to state 89
    PLUS   shift, and go to state 90
    MINUS  shift, and go to state 91
    MUL    shift, and go to state 92
    DIV    shift, and go to state 93
    MOD    shift, and go to state 94


State 121

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   31 IF_BLOCK: IF LB $@16 A_EXPN RB $@17 STATEMENTS .

    ELSE      reduce using rule 31 (IF_BLOCK)
    ENDIF     reduce using rule 31 (IF_BLOCK)
    ELSEIF    reduce using rule 31 (IF_BLOCK)
    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 122

   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   60       | A_EXPN LEQ $@27 A_EXPN .
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    $default  reduce using rule 60 (A_EXPN)


State 123

   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   62       | A_EXPN GT $@28 A_EXPN .
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    $default  reduce using rule 62 (A_EXPN)


State 124

   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   64       | A_EXPN LT $@29 A_EXPN .
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    $default  reduce using rule 64 (A_EXPN)


State 125

   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   66       | A_EXPN NEQ $@30 A_EXPN .
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    $default  reduce using rule 66 (A_EXPN)


State 126

   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   68       | A_EXPN DEQ $@31 A_EXPN .
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    $default  reduce using rule 68 (A_EXPN)


State 127

   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   56       | A_EXPN LAND $@25 A_EXPN .
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    $default  reduce using rule 56 (A_EXPN)


State 128

   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   58       | A_EXPN LOR $@26 A_EXPN .
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    $default  reduce using rule 58 (A_EXPN)


State 129

   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   72       | A_EXPN PLUS $@33 A_EXPN .
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    $default  reduce using rule 72 (A_EXPN)


State 130

   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   74       | A_EXPN MINUS $@34 A_EXPN .
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    $default  reduce using rule 74 (A_EXPN)


State 131

   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   76       | A_EXPN MUL $@35 A_EXPN .
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    $default  reduce using rule 76 (A_EXPN)


State 132

   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   78       | A_EXPN DIV $@36 A_EXPN .
   80       | A_EXPN . MOD $@37 A_EXPN

    $default  reduce using rule 78 (A_EXPN)


State 133

   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN
   80       | A_EXPN MOD $@37 A_EXPN .

    $default  reduce using rule 80 (A_EXPN)


State 134

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 . TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63

    TERMINALS  go to state 137


State 135

   27 STATEMENT: REPEAT $@14 STATEMENTS UNTIL LB $@15 A_EXPN . RB
   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    RB     shift, and go to state 138
    LEQ    shift, and go to state 83
    GT     shift, and go to state 84
    LT     shift, and go to state 85
    NEQ    shift, and go to state 86
    DEQ    shift, and go to state 87
    LAND   shift, and go to state 88
    LOR    shift, and go to state 89
    PLUS   shift, and go to state 90
    MINUS  shift, and go to state 91
    MUL    shift, and go to state 92
    DIV    shift, and go to state 93
    MOD    shift, and go to state 94


State 136

   36 ELSEIF_BLOCK: ELSEIF LB $@18 A_EXPN RB . $@19 STATEMENTS

    $default  reduce using rule 35 ($@19)

    $@19  go to state 139


State 137

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS . $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    $default  reduce using rule 20 ($@10)

    $@10  go to state 140


State 138

   27 STATEMENT: REPEAT $@14 STATEMENTS UNTIL LB $@15 A_EXPN RB .

    $default  reduce using rule 27 (STATEMENT)


State 139

   36 ELSEIF_BLOCK: ELSEIF LB $@18 A_EXPN RB $@19 . STATEMENTS

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 141


State 140

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 . TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    TO  shift, and go to state 142


State 141

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   36 ELSEIF_BLOCK: ELSEIF LB $@18 A_EXPN RB $@19 STATEMENTS .

    ELSE      reduce using rule 36 (ELSEIF_BLOCK)
    ELSEIF    reduce using rule 36 (ELSEIF_BLOCK)
    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 142

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO . $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    $default  reduce using rule 21 ($@11)

    $@11  go to state 143


State 143

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 . A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR

    NUMBER  shift, and go to state 62
    VAR     shift, and go to state 63
    NOT     shift, and go to state 64

    A_EXPN     go to state 144
    TERMINALS  go to state 66


State 144

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN . $@12 RB DO $@13 STATEMENTS ENDFOR
   56 A_EXPN: A_EXPN . LAND $@25 A_EXPN
   58       | A_EXPN . LOR $@26 A_EXPN
   60       | A_EXPN . LEQ $@27 A_EXPN
   62       | A_EXPN . GT $@28 A_EXPN
   64       | A_EXPN . LT $@29 A_EXPN
   66       | A_EXPN . NEQ $@30 A_EXPN
   68       | A_EXPN . DEQ $@31 A_EXPN
   72       | A_EXPN . PLUS $@33 A_EXPN
   74       | A_EXPN . MINUS $@34 A_EXPN
   76       | A_EXPN . MUL $@35 A_EXPN
   78       | A_EXPN . DIV $@36 A_EXPN
   80       | A_EXPN . MOD $@37 A_EXPN

    LEQ    shift, and go to state 83
    GT     shift, and go to state 84
    LT     shift, and go to state 85
    NEQ    shift, and go to state 86
    DEQ    shift, and go to state 87
    LAND   shift, and go to state 88
    LOR    shift, and go to state 89
    PLUS   shift, and go to state 90
    MINUS  shift, and go to state 91
    MUL    shift, and go to state 92
    DIV    shift, and go to state 93
    MOD    shift, and go to state 94

    $default  reduce using rule 22 ($@12)

    $@12  go to state 145


State 145

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 . RB DO $@13 STATEMENTS ENDFOR

    RB  shift, and go to state 146


State 146

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB . DO $@13 STATEMENTS ENDFOR

    DO  shift, and go to state 147


State 147

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO . $@13 STATEMENTS ENDFOR

    $default  reduce using rule 23 ($@13)

    $@13  go to state 148


State 148

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 . STATEMENTS ENDFOR

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 149


State 149

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS . ENDFOR

    ENDFOR  shift, and go to state 150

    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 150

   24 STATEMENT: FOR LB $@7 VAR $@8 ARROW_ASSIGNMENT $@9 TERMINALS $@10 TO $@11 A_EXPN $@12 RB DO $@13 STATEMENTS ENDFOR .

    $default  reduce using rule 24 (STATEMENT)
