Grammar

    0 $accept: prm $end

    1 $@1: %empty

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS END COLON

    3 STATEMENTS: STATEMENTS STATEMENT
    4           | %empty

    5 $@2: %empty

    6 STATEMENT: $@2 VAR_START VAR_LIST COLON TYPE SEMICOLON

    7 $@3: %empty

    8 $@4: %empty

    9 $@5: %empty

   10 STATEMENT: $@3 VAR $@4 ASSIGNMENT $@5 A_EXPN SEMICOLON

   11 $@6: %empty

   12 STATEMENT: $@6 READ LB READ_VAR_LIST RB SEMICOLON

   13 $@7: %empty

   14 STATEMENT: $@7 WRITE LB WRITE_VAR_LIST RB SEMICOLON
   15          | EXIT COLON

   16 $@8: %empty

   17 WRITE_VAR_LIST: QUOTED_STRING $@8 COMA WRITE_VAR_LIST

   18 $@9: %empty

   19 WRITE_VAR_LIST: VAR $@9 COMA WRITE_VAR_LIST
   20               | QUOTED_STRING
   21               | VAR

   22 $@10: %empty

   23 READ_VAR_LIST: VAR $@10 COMA READ_VAR_LIST
   24              | VAR

   25 A_EXPN: VAR
   26       | NUMBER

   27 $@11: %empty

   28 VAR_LIST: VAR $@11 COMA VAR_LIST
   29         | VAR

   30 TYPE: INT
   31     | CHAR
   32     | FLOAT
   33     | DOUBLE


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 26
PROC (259) 2
MAIN (260) 2
BGIN (261) 2
COLON (262) 2 6 15
END (263) 2
ASSIGNMENT (264) 10
VAR_START (265) 6
COMA (266) 17 19 23 28
SEMICOLON (267) 6 10 12 14
VAR (268) 10 19 21 23 24 25 28 29
READ (269) 12
LB (270) 12 14
RB (271) 12 14
WRITE (272) 14
QUOTED_STRING (273) 17 20
EXIT (274) 15
INT (275) 30
CHAR (276) 31
FLOAT (277) 32
DOUBLE (278) 33


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
prm (25)
    on left: 2, on right: 0
$@1 (26)
    on left: 1, on right: 2
STATEMENTS (27)
    on left: 3 4, on right: 2 3
STATEMENT (28)
    on left: 6 10 12 14 15, on right: 3
$@2 (29)
    on left: 5, on right: 6
$@3 (30)
    on left: 7, on right: 10
$@4 (31)
    on left: 8, on right: 10
$@5 (32)
    on left: 9, on right: 10
$@6 (33)
    on left: 11, on right: 12
$@7 (34)
    on left: 13, on right: 14
WRITE_VAR_LIST (35)
    on left: 17 19 20 21, on right: 14 17 19
$@8 (36)
    on left: 16, on right: 17
$@9 (37)
    on left: 18, on right: 19
READ_VAR_LIST (38)
    on left: 23 24, on right: 12 23
$@10 (39)
    on left: 22, on right: 23
A_EXPN (40)
    on left: 25 26, on right: 10
VAR_LIST (41)
    on left: 28 29, on right: 6 28
$@11 (42)
    on left: 27, on right: 28
TYPE (43)
    on left: 30 31 32 33, on right: 6


State 0

    0 $accept: . prm $end

    PROC  shift, and go to state 1

    prm  go to state 2


State 1

    2 prm: PROC . MAIN BGIN COLON $@1 STATEMENTS END COLON

    MAIN  shift, and go to state 3


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 4


State 3

    2 prm: PROC MAIN . BGIN COLON $@1 STATEMENTS END COLON

    BGIN  shift, and go to state 5


State 4

    0 $accept: prm $end .

    $default  accept


State 5

    2 prm: PROC MAIN BGIN . COLON $@1 STATEMENTS END COLON

    COLON  shift, and go to state 6


State 6

    2 prm: PROC MAIN BGIN COLON . $@1 STATEMENTS END COLON

    $default  reduce using rule 1 ($@1)

    $@1  go to state 7


State 7

    2 prm: PROC MAIN BGIN COLON $@1 . STATEMENTS END COLON

    $default  reduce using rule 4 (STATEMENTS)

    STATEMENTS  go to state 8


State 8

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS . END COLON
    3 STATEMENTS: STATEMENTS . STATEMENT

    END   shift, and go to state 9
    EXIT  shift, and go to state 10

    VAR       reduce using rule 7 ($@3)
    READ      reduce using rule 11 ($@6)
    WRITE     reduce using rule 13 ($@7)
    $default  reduce using rule 5 ($@2)

    STATEMENT  go to state 11
    $@2        go to state 12
    $@3        go to state 13
    $@6        go to state 14
    $@7        go to state 15


State 9

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS END . COLON

    COLON  shift, and go to state 16


State 10

   15 STATEMENT: EXIT . COLON

    COLON  shift, and go to state 17


State 11

    3 STATEMENTS: STATEMENTS STATEMENT .

    $default  reduce using rule 3 (STATEMENTS)


State 12

    6 STATEMENT: $@2 . VAR_START VAR_LIST COLON TYPE SEMICOLON

    VAR_START  shift, and go to state 18


State 13

   10 STATEMENT: $@3 . VAR $@4 ASSIGNMENT $@5 A_EXPN SEMICOLON

    VAR  shift, and go to state 19


State 14

   12 STATEMENT: $@6 . READ LB READ_VAR_LIST RB SEMICOLON

    READ  shift, and go to state 20


State 15

   14 STATEMENT: $@7 . WRITE LB WRITE_VAR_LIST RB SEMICOLON

    WRITE  shift, and go to state 21


State 16

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS END COLON .

    $default  reduce using rule 2 (prm)


State 17

   15 STATEMENT: EXIT COLON .

    $default  reduce using rule 15 (STATEMENT)


State 18

    6 STATEMENT: $@2 VAR_START . VAR_LIST COLON TYPE SEMICOLON

    VAR  shift, and go to state 22

    VAR_LIST  go to state 23


State 19

   10 STATEMENT: $@3 VAR . $@4 ASSIGNMENT $@5 A_EXPN SEMICOLON

    $default  reduce using rule 8 ($@4)

    $@4  go to state 24


State 20

   12 STATEMENT: $@6 READ . LB READ_VAR_LIST RB SEMICOLON

    LB  shift, and go to state 25


State 21

   14 STATEMENT: $@7 WRITE . LB WRITE_VAR_LIST RB SEMICOLON

    LB  shift, and go to state 26


State 22

   28 VAR_LIST: VAR . $@11 COMA VAR_LIST
   29         | VAR .

    COLON     reduce using rule 29 (VAR_LIST)
    $default  reduce using rule 27 ($@11)

    $@11  go to state 27


State 23

    6 STATEMENT: $@2 VAR_START VAR_LIST . COLON TYPE SEMICOLON

    COLON  shift, and go to state 28


State 24

   10 STATEMENT: $@3 VAR $@4 . ASSIGNMENT $@5 A_EXPN SEMICOLON

    ASSIGNMENT  shift, and go to state 29


State 25

   12 STATEMENT: $@6 READ LB . READ_VAR_LIST RB SEMICOLON

    VAR  shift, and go to state 30

    READ_VAR_LIST  go to state 31


State 26

   14 STATEMENT: $@7 WRITE LB . WRITE_VAR_LIST RB SEMICOLON

    VAR            shift, and go to state 32
    QUOTED_STRING  shift, and go to state 33

    WRITE_VAR_LIST  go to state 34


State 27

   28 VAR_LIST: VAR $@11 . COMA VAR_LIST

    COMA  shift, and go to state 35


State 28

    6 STATEMENT: $@2 VAR_START VAR_LIST COLON . TYPE SEMICOLON

    INT     shift, and go to state 36
    CHAR    shift, and go to state 37
    FLOAT   shift, and go to state 38
    DOUBLE  shift, and go to state 39

    TYPE  go to state 40


State 29

   10 STATEMENT: $@3 VAR $@4 ASSIGNMENT . $@5 A_EXPN SEMICOLON

    $default  reduce using rule 9 ($@5)

    $@5  go to state 41


State 30

   23 READ_VAR_LIST: VAR . $@10 COMA READ_VAR_LIST
   24              | VAR .

    RB        reduce using rule 24 (READ_VAR_LIST)
    $default  reduce using rule 22 ($@10)

    $@10  go to state 42


State 31

   12 STATEMENT: $@6 READ LB READ_VAR_LIST . RB SEMICOLON

    RB  shift, and go to state 43


State 32

   19 WRITE_VAR_LIST: VAR . $@9 COMA WRITE_VAR_LIST
   21               | VAR .

    RB        reduce using rule 21 (WRITE_VAR_LIST)
    $default  reduce using rule 18 ($@9)

    $@9  go to state 44


State 33

   17 WRITE_VAR_LIST: QUOTED_STRING . $@8 COMA WRITE_VAR_LIST
   20               | QUOTED_STRING .

    RB        reduce using rule 20 (WRITE_VAR_LIST)
    $default  reduce using rule 16 ($@8)

    $@8  go to state 45


State 34

   14 STATEMENT: $@7 WRITE LB WRITE_VAR_LIST . RB SEMICOLON

    RB  shift, and go to state 46


State 35

   28 VAR_LIST: VAR $@11 COMA . VAR_LIST

    VAR  shift, and go to state 22

    VAR_LIST  go to state 47


State 36

   30 TYPE: INT .

    $default  reduce using rule 30 (TYPE)


State 37

   31 TYPE: CHAR .

    $default  reduce using rule 31 (TYPE)


State 38

   32 TYPE: FLOAT .

    $default  reduce using rule 32 (TYPE)


State 39

   33 TYPE: DOUBLE .

    $default  reduce using rule 33 (TYPE)


State 40

    6 STATEMENT: $@2 VAR_START VAR_LIST COLON TYPE . SEMICOLON

    SEMICOLON  shift, and go to state 48


State 41

   10 STATEMENT: $@3 VAR $@4 ASSIGNMENT $@5 . A_EXPN SEMICOLON

    NUMBER  shift, and go to state 49
    VAR     shift, and go to state 50

    A_EXPN  go to state 51


State 42

   23 READ_VAR_LIST: VAR $@10 . COMA READ_VAR_LIST

    COMA  shift, and go to state 52


State 43

   12 STATEMENT: $@6 READ LB READ_VAR_LIST RB . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 44

   19 WRITE_VAR_LIST: VAR $@9 . COMA WRITE_VAR_LIST

    COMA  shift, and go to state 54


State 45

   17 WRITE_VAR_LIST: QUOTED_STRING $@8 . COMA WRITE_VAR_LIST

    COMA  shift, and go to state 55


State 46

   14 STATEMENT: $@7 WRITE LB WRITE_VAR_LIST RB . SEMICOLON

    SEMICOLON  shift, and go to state 56


State 47

   28 VAR_LIST: VAR $@11 COMA VAR_LIST .

    $default  reduce using rule 28 (VAR_LIST)


State 48

    6 STATEMENT: $@2 VAR_START VAR_LIST COLON TYPE SEMICOLON .

    $default  reduce using rule 6 (STATEMENT)


State 49

   26 A_EXPN: NUMBER .

    $default  reduce using rule 26 (A_EXPN)


State 50

   25 A_EXPN: VAR .

    $default  reduce using rule 25 (A_EXPN)


State 51

   10 STATEMENT: $@3 VAR $@4 ASSIGNMENT $@5 A_EXPN . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 52

   23 READ_VAR_LIST: VAR $@10 COMA . READ_VAR_LIST

    VAR  shift, and go to state 30

    READ_VAR_LIST  go to state 58


State 53

   12 STATEMENT: $@6 READ LB READ_VAR_LIST RB SEMICOLON .

    $default  reduce using rule 12 (STATEMENT)


State 54

   19 WRITE_VAR_LIST: VAR $@9 COMA . WRITE_VAR_LIST

    VAR            shift, and go to state 32
    QUOTED_STRING  shift, and go to state 33

    WRITE_VAR_LIST  go to state 59


State 55

   17 WRITE_VAR_LIST: QUOTED_STRING $@8 COMA . WRITE_VAR_LIST

    VAR            shift, and go to state 32
    QUOTED_STRING  shift, and go to state 33

    WRITE_VAR_LIST  go to state 60


State 56

   14 STATEMENT: $@7 WRITE LB WRITE_VAR_LIST RB SEMICOLON .

    $default  reduce using rule 14 (STATEMENT)


State 57

   10 STATEMENT: $@3 VAR $@4 ASSIGNMENT $@5 A_EXPN SEMICOLON .

    $default  reduce using rule 10 (STATEMENT)


State 58

   23 READ_VAR_LIST: VAR $@10 COMA READ_VAR_LIST .

    $default  reduce using rule 23 (READ_VAR_LIST)


State 59

   19 WRITE_VAR_LIST: VAR $@9 COMA WRITE_VAR_LIST .

    $default  reduce using rule 19 (WRITE_VAR_LIST)


State 60

   17 WRITE_VAR_LIST: QUOTED_STRING $@8 COMA WRITE_VAR_LIST .

    $default  reduce using rule 17 (WRITE_VAR_LIST)
