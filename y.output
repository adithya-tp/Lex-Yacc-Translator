Terminals unused in grammar

   GEQ


Grammar

    0 $accept: prm $end

    1 $@1: %empty

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS END COLON

    3 $@2: %empty

    4 STATEMENTS: STATEMENTS $@2 STATEMENT
    5           | %empty

    6 STATEMENT: VAR_START VAR_LIST COLON TYPE SEMICOLON

    7 $@3: %empty

    8 $@4: %empty

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 A_EXPN SEMICOLON
   10          | READ LB READ_VAR_LIST RB SEMICOLON
   11          | WRITE LB WRITE_VAR_LIST RB SEMICOLON

   12 $@5: %empty

   13 $@6: %empty

   14 $@7: %empty

   15 $@8: %empty

   16 $@9: %empty

   17 $@10: %empty

   18 STATEMENT: IF LB $@5 L_EXPN RB $@6 $@7 STATEMENTS $@8 ELSE $@9 $@10 STATEMENTS ENDIF
   19          | EXIT COLON

   20 $@11: %empty

   21 VAR_LIST: VAR $@11 COMA VAR_LIST
   22         | VAR

   23 TYPE: INT
   24     | CHAR
   25     | FLOAT
   26     | DOUBLE

   27 $@12: %empty

   28 L_EXPN: L_EXPN LEQ $@12 L_EXPN

   29 $@13: %empty

   30 L_EXPN: L_EXPN GT $@13 L_EXPN

   31 $@14: %empty

   32 L_EXPN: L_EXPN LT $@14 L_EXPN

   33 $@15: %empty

   34 L_EXPN: L_EXPN NEQ $@15 L_EXPN

   35 $@16: %empty

   36 L_EXPN: L_EXPN DEQ $@16 L_EXPN

   37 $@17: %empty

   38 L_EXPN: NOT $@17 L_EXPN
   39       | A_EXPN

   40 $@18: %empty

   41 WRITE_VAR_LIST: QUOTED_STRING $@18 COMA WRITE_VAR_LIST

   42 $@19: %empty

   43 WRITE_VAR_LIST: VAR $@19 COMA WRITE_VAR_LIST
   44               | QUOTED_STRING
   45               | VAR

   46 $@20: %empty

   47 READ_VAR_LIST: VAR $@20 COMA READ_VAR_LIST
   48              | VAR

   49 A_EXPN: TERMINALS

   50 TERMINALS: VAR
   51          | NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 51
PROC (259) 2
MAIN (260) 2
BGIN (261) 2
COLON (262) 2 6 19
END (263) 2
ASSIGNMENT (264) 9
VAR_START (265) 6
COMA (266) 21 41 43 47
SEMICOLON (267) 6 9 10 11
VAR (268) 9 21 22 43 45 47 48 50
READ (269) 10
LB (270) 10 11 18
RB (271) 10 11 18
WRITE (272) 11
QUOTED_STRING (273) 41 44
EXIT (274) 19
IF (275) 18
ELSE (276) 18
ENDIF (277) 18
GEQ (278)
LEQ (279) 28
GT (280) 30
LT (281) 32
NEQ (282) 34
DEQ (283) 36
NOT (284) 38
INT (285) 23
CHAR (286) 24
FLOAT (287) 25
DOUBLE (288) 26


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
prm (35)
    on left: 2, on right: 0
$@1 (36)
    on left: 1, on right: 2
STATEMENTS (37)
    on left: 4 5, on right: 2 4 18
$@2 (38)
    on left: 3, on right: 4
STATEMENT (39)
    on left: 6 9 10 11 18 19, on right: 4
$@3 (40)
    on left: 7, on right: 9
$@4 (41)
    on left: 8, on right: 9
$@5 (42)
    on left: 12, on right: 18
$@6 (43)
    on left: 13, on right: 18
$@7 (44)
    on left: 14, on right: 18
$@8 (45)
    on left: 15, on right: 18
$@9 (46)
    on left: 16, on right: 18
$@10 (47)
    on left: 17, on right: 18
VAR_LIST (48)
    on left: 21 22, on right: 6 21
$@11 (49)
    on left: 20, on right: 21
TYPE (50)
    on left: 23 24 25 26, on right: 6
L_EXPN (51)
    on left: 28 30 32 34 36 38 39, on right: 18 28 30 32 34 36 38
$@12 (52)
    on left: 27, on right: 28
$@13 (53)
    on left: 29, on right: 30
$@14 (54)
    on left: 31, on right: 32
$@15 (55)
    on left: 33, on right: 34
$@16 (56)
    on left: 35, on right: 36
$@17 (57)
    on left: 37, on right: 38
WRITE_VAR_LIST (58)
    on left: 41 43 44 45, on right: 11 41 43
$@18 (59)
    on left: 40, on right: 41
$@19 (60)
    on left: 42, on right: 43
READ_VAR_LIST (61)
    on left: 47 48, on right: 10 47
$@20 (62)
    on left: 46, on right: 47
A_EXPN (63)
    on left: 49, on right: 9 39
TERMINALS (64)
    on left: 50 51, on right: 49


State 0

    0 $accept: . prm $end

    PROC  shift, and go to state 1

    prm  go to state 2


State 1

    2 prm: PROC . MAIN BGIN COLON $@1 STATEMENTS END COLON

    MAIN  shift, and go to state 3


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 4


State 3

    2 prm: PROC MAIN . BGIN COLON $@1 STATEMENTS END COLON

    BGIN  shift, and go to state 5


State 4

    0 $accept: prm $end .

    $default  accept


State 5

    2 prm: PROC MAIN BGIN . COLON $@1 STATEMENTS END COLON

    COLON  shift, and go to state 6


State 6

    2 prm: PROC MAIN BGIN COLON . $@1 STATEMENTS END COLON

    $default  reduce using rule 1 ($@1)

    $@1  go to state 7


State 7

    2 prm: PROC MAIN BGIN COLON $@1 . STATEMENTS END COLON

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 8


State 8

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS . END COLON
    4 STATEMENTS: STATEMENTS . $@2 STATEMENT

    END  shift, and go to state 9

    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 9

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS END . COLON

    COLON  shift, and go to state 11


State 10

    4 STATEMENTS: STATEMENTS $@2 . STATEMENT

    VAR_START  shift, and go to state 12
    VAR        shift, and go to state 13
    READ       shift, and go to state 14
    WRITE      shift, and go to state 15
    EXIT       shift, and go to state 16
    IF         shift, and go to state 17

    STATEMENT  go to state 18


State 11

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS END COLON .

    $default  reduce using rule 2 (prm)


State 12

    6 STATEMENT: VAR_START . VAR_LIST COLON TYPE SEMICOLON

    VAR  shift, and go to state 19

    VAR_LIST  go to state 20


State 13

    9 STATEMENT: VAR . $@3 ASSIGNMENT $@4 A_EXPN SEMICOLON

    $default  reduce using rule 7 ($@3)

    $@3  go to state 21


State 14

   10 STATEMENT: READ . LB READ_VAR_LIST RB SEMICOLON

    LB  shift, and go to state 22


State 15

   11 STATEMENT: WRITE . LB WRITE_VAR_LIST RB SEMICOLON

    LB  shift, and go to state 23


State 16

   19 STATEMENT: EXIT . COLON

    COLON  shift, and go to state 24


State 17

   18 STATEMENT: IF . LB $@5 L_EXPN RB $@6 $@7 STATEMENTS $@8 ELSE $@9 $@10 STATEMENTS ENDIF

    LB  shift, and go to state 25


State 18

    4 STATEMENTS: STATEMENTS $@2 STATEMENT .

    $default  reduce using rule 4 (STATEMENTS)


State 19

   21 VAR_LIST: VAR . $@11 COMA VAR_LIST
   22         | VAR .

    COLON     reduce using rule 22 (VAR_LIST)
    $default  reduce using rule 20 ($@11)

    $@11  go to state 26


State 20

    6 STATEMENT: VAR_START VAR_LIST . COLON TYPE SEMICOLON

    COLON  shift, and go to state 27


State 21

    9 STATEMENT: VAR $@3 . ASSIGNMENT $@4 A_EXPN SEMICOLON

    ASSIGNMENT  shift, and go to state 28


State 22

   10 STATEMENT: READ LB . READ_VAR_LIST RB SEMICOLON

    VAR  shift, and go to state 29

    READ_VAR_LIST  go to state 30


State 23

   11 STATEMENT: WRITE LB . WRITE_VAR_LIST RB SEMICOLON

    VAR            shift, and go to state 31
    QUOTED_STRING  shift, and go to state 32

    WRITE_VAR_LIST  go to state 33


State 24

   19 STATEMENT: EXIT COLON .

    $default  reduce using rule 19 (STATEMENT)


State 25

   18 STATEMENT: IF LB . $@5 L_EXPN RB $@6 $@7 STATEMENTS $@8 ELSE $@9 $@10 STATEMENTS ENDIF

    $default  reduce using rule 12 ($@5)

    $@5  go to state 34


State 26

   21 VAR_LIST: VAR $@11 . COMA VAR_LIST

    COMA  shift, and go to state 35


State 27

    6 STATEMENT: VAR_START VAR_LIST COLON . TYPE SEMICOLON

    INT     shift, and go to state 36
    CHAR    shift, and go to state 37
    FLOAT   shift, and go to state 38
    DOUBLE  shift, and go to state 39

    TYPE  go to state 40


State 28

    9 STATEMENT: VAR $@3 ASSIGNMENT . $@4 A_EXPN SEMICOLON

    $default  reduce using rule 8 ($@4)

    $@4  go to state 41


State 29

   47 READ_VAR_LIST: VAR . $@20 COMA READ_VAR_LIST
   48              | VAR .

    RB        reduce using rule 48 (READ_VAR_LIST)
    $default  reduce using rule 46 ($@20)

    $@20  go to state 42


State 30

   10 STATEMENT: READ LB READ_VAR_LIST . RB SEMICOLON

    RB  shift, and go to state 43


State 31

   43 WRITE_VAR_LIST: VAR . $@19 COMA WRITE_VAR_LIST
   45               | VAR .

    RB        reduce using rule 45 (WRITE_VAR_LIST)
    $default  reduce using rule 42 ($@19)

    $@19  go to state 44


State 32

   41 WRITE_VAR_LIST: QUOTED_STRING . $@18 COMA WRITE_VAR_LIST
   44               | QUOTED_STRING .

    RB        reduce using rule 44 (WRITE_VAR_LIST)
    $default  reduce using rule 40 ($@18)

    $@18  go to state 45


State 33

   11 STATEMENT: WRITE LB WRITE_VAR_LIST . RB SEMICOLON

    RB  shift, and go to state 46


State 34

   18 STATEMENT: IF LB $@5 . L_EXPN RB $@6 $@7 STATEMENTS $@8 ELSE $@9 $@10 STATEMENTS ENDIF

    NUMBER  shift, and go to state 47
    VAR     shift, and go to state 48
    NOT     shift, and go to state 49

    L_EXPN     go to state 50
    A_EXPN     go to state 51
    TERMINALS  go to state 52


State 35

   21 VAR_LIST: VAR $@11 COMA . VAR_LIST

    VAR  shift, and go to state 19

    VAR_LIST  go to state 53


State 36

   23 TYPE: INT .

    $default  reduce using rule 23 (TYPE)


State 37

   24 TYPE: CHAR .

    $default  reduce using rule 24 (TYPE)


State 38

   25 TYPE: FLOAT .

    $default  reduce using rule 25 (TYPE)


State 39

   26 TYPE: DOUBLE .

    $default  reduce using rule 26 (TYPE)


State 40

    6 STATEMENT: VAR_START VAR_LIST COLON TYPE . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 41

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 . A_EXPN SEMICOLON

    NUMBER  shift, and go to state 47
    VAR     shift, and go to state 48

    A_EXPN     go to state 55
    TERMINALS  go to state 52


State 42

   47 READ_VAR_LIST: VAR $@20 . COMA READ_VAR_LIST

    COMA  shift, and go to state 56


State 43

   10 STATEMENT: READ LB READ_VAR_LIST RB . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 44

   43 WRITE_VAR_LIST: VAR $@19 . COMA WRITE_VAR_LIST

    COMA  shift, and go to state 58


State 45

   41 WRITE_VAR_LIST: QUOTED_STRING $@18 . COMA WRITE_VAR_LIST

    COMA  shift, and go to state 59


State 46

   11 STATEMENT: WRITE LB WRITE_VAR_LIST RB . SEMICOLON

    SEMICOLON  shift, and go to state 60


State 47

   51 TERMINALS: NUMBER .

    $default  reduce using rule 51 (TERMINALS)


State 48

   50 TERMINALS: VAR .

    $default  reduce using rule 50 (TERMINALS)


State 49

   38 L_EXPN: NOT . $@17 L_EXPN

    $default  reduce using rule 37 ($@17)

    $@17  go to state 61


State 50

   18 STATEMENT: IF LB $@5 L_EXPN . RB $@6 $@7 STATEMENTS $@8 ELSE $@9 $@10 STATEMENTS ENDIF
   28 L_EXPN: L_EXPN . LEQ $@12 L_EXPN
   30       | L_EXPN . GT $@13 L_EXPN
   32       | L_EXPN . LT $@14 L_EXPN
   34       | L_EXPN . NEQ $@15 L_EXPN
   36       | L_EXPN . DEQ $@16 L_EXPN

    RB   shift, and go to state 62
    LEQ  shift, and go to state 63
    GT   shift, and go to state 64
    LT   shift, and go to state 65
    NEQ  shift, and go to state 66
    DEQ  shift, and go to state 67


State 51

   39 L_EXPN: A_EXPN .

    $default  reduce using rule 39 (L_EXPN)


State 52

   49 A_EXPN: TERMINALS .

    $default  reduce using rule 49 (A_EXPN)


State 53

   21 VAR_LIST: VAR $@11 COMA VAR_LIST .

    $default  reduce using rule 21 (VAR_LIST)


State 54

    6 STATEMENT: VAR_START VAR_LIST COLON TYPE SEMICOLON .

    $default  reduce using rule 6 (STATEMENT)


State 55

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 A_EXPN . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 56

   47 READ_VAR_LIST: VAR $@20 COMA . READ_VAR_LIST

    VAR  shift, and go to state 29

    READ_VAR_LIST  go to state 69


State 57

   10 STATEMENT: READ LB READ_VAR_LIST RB SEMICOLON .

    $default  reduce using rule 10 (STATEMENT)


State 58

   43 WRITE_VAR_LIST: VAR $@19 COMA . WRITE_VAR_LIST

    VAR            shift, and go to state 31
    QUOTED_STRING  shift, and go to state 32

    WRITE_VAR_LIST  go to state 70


State 59

   41 WRITE_VAR_LIST: QUOTED_STRING $@18 COMA . WRITE_VAR_LIST

    VAR            shift, and go to state 31
    QUOTED_STRING  shift, and go to state 32

    WRITE_VAR_LIST  go to state 71


State 60

   11 STATEMENT: WRITE LB WRITE_VAR_LIST RB SEMICOLON .

    $default  reduce using rule 11 (STATEMENT)


State 61

   38 L_EXPN: NOT $@17 . L_EXPN

    NUMBER  shift, and go to state 47
    VAR     shift, and go to state 48
    NOT     shift, and go to state 49

    L_EXPN     go to state 72
    A_EXPN     go to state 51
    TERMINALS  go to state 52


State 62

   18 STATEMENT: IF LB $@5 L_EXPN RB . $@6 $@7 STATEMENTS $@8 ELSE $@9 $@10 STATEMENTS ENDIF

    $default  reduce using rule 13 ($@6)

    $@6  go to state 73


State 63

   28 L_EXPN: L_EXPN LEQ . $@12 L_EXPN

    $default  reduce using rule 27 ($@12)

    $@12  go to state 74


State 64

   30 L_EXPN: L_EXPN GT . $@13 L_EXPN

    $default  reduce using rule 29 ($@13)

    $@13  go to state 75


State 65

   32 L_EXPN: L_EXPN LT . $@14 L_EXPN

    $default  reduce using rule 31 ($@14)

    $@14  go to state 76


State 66

   34 L_EXPN: L_EXPN NEQ . $@15 L_EXPN

    $default  reduce using rule 33 ($@15)

    $@15  go to state 77


State 67

   36 L_EXPN: L_EXPN DEQ . $@16 L_EXPN

    $default  reduce using rule 35 ($@16)

    $@16  go to state 78


State 68

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 A_EXPN SEMICOLON .

    $default  reduce using rule 9 (STATEMENT)


State 69

   47 READ_VAR_LIST: VAR $@20 COMA READ_VAR_LIST .

    $default  reduce using rule 47 (READ_VAR_LIST)


State 70

   43 WRITE_VAR_LIST: VAR $@19 COMA WRITE_VAR_LIST .

    $default  reduce using rule 43 (WRITE_VAR_LIST)


State 71

   41 WRITE_VAR_LIST: QUOTED_STRING $@18 COMA WRITE_VAR_LIST .

    $default  reduce using rule 41 (WRITE_VAR_LIST)


State 72

   28 L_EXPN: L_EXPN . LEQ $@12 L_EXPN
   30       | L_EXPN . GT $@13 L_EXPN
   32       | L_EXPN . LT $@14 L_EXPN
   34       | L_EXPN . NEQ $@15 L_EXPN
   36       | L_EXPN . DEQ $@16 L_EXPN
   38       | NOT $@17 L_EXPN .

    $default  reduce using rule 38 (L_EXPN)


State 73

   18 STATEMENT: IF LB $@5 L_EXPN RB $@6 . $@7 STATEMENTS $@8 ELSE $@9 $@10 STATEMENTS ENDIF

    $default  reduce using rule 14 ($@7)

    $@7  go to state 79


State 74

   28 L_EXPN: L_EXPN LEQ $@12 . L_EXPN

    NUMBER  shift, and go to state 47
    VAR     shift, and go to state 48
    NOT     shift, and go to state 49

    L_EXPN     go to state 80
    A_EXPN     go to state 51
    TERMINALS  go to state 52


State 75

   30 L_EXPN: L_EXPN GT $@13 . L_EXPN

    NUMBER  shift, and go to state 47
    VAR     shift, and go to state 48
    NOT     shift, and go to state 49

    L_EXPN     go to state 81
    A_EXPN     go to state 51
    TERMINALS  go to state 52


State 76

   32 L_EXPN: L_EXPN LT $@14 . L_EXPN

    NUMBER  shift, and go to state 47
    VAR     shift, and go to state 48
    NOT     shift, and go to state 49

    L_EXPN     go to state 82
    A_EXPN     go to state 51
    TERMINALS  go to state 52


State 77

   34 L_EXPN: L_EXPN NEQ $@15 . L_EXPN

    NUMBER  shift, and go to state 47
    VAR     shift, and go to state 48
    NOT     shift, and go to state 49

    L_EXPN     go to state 83
    A_EXPN     go to state 51
    TERMINALS  go to state 52


State 78

   36 L_EXPN: L_EXPN DEQ $@16 . L_EXPN

    NUMBER  shift, and go to state 47
    VAR     shift, and go to state 48
    NOT     shift, and go to state 49

    L_EXPN     go to state 84
    A_EXPN     go to state 51
    TERMINALS  go to state 52


State 79

   18 STATEMENT: IF LB $@5 L_EXPN RB $@6 $@7 . STATEMENTS $@8 ELSE $@9 $@10 STATEMENTS ENDIF

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 85


State 80

   28 L_EXPN: L_EXPN . LEQ $@12 L_EXPN
   28       | L_EXPN LEQ $@12 L_EXPN .
   30       | L_EXPN . GT $@13 L_EXPN
   32       | L_EXPN . LT $@14 L_EXPN
   34       | L_EXPN . NEQ $@15 L_EXPN
   36       | L_EXPN . DEQ $@16 L_EXPN

    $default  reduce using rule 28 (L_EXPN)


State 81

   28 L_EXPN: L_EXPN . LEQ $@12 L_EXPN
   30       | L_EXPN . GT $@13 L_EXPN
   30       | L_EXPN GT $@13 L_EXPN .
   32       | L_EXPN . LT $@14 L_EXPN
   34       | L_EXPN . NEQ $@15 L_EXPN
   36       | L_EXPN . DEQ $@16 L_EXPN

    $default  reduce using rule 30 (L_EXPN)


State 82

   28 L_EXPN: L_EXPN . LEQ $@12 L_EXPN
   30       | L_EXPN . GT $@13 L_EXPN
   32       | L_EXPN . LT $@14 L_EXPN
   32       | L_EXPN LT $@14 L_EXPN .
   34       | L_EXPN . NEQ $@15 L_EXPN
   36       | L_EXPN . DEQ $@16 L_EXPN

    $default  reduce using rule 32 (L_EXPN)


State 83

   28 L_EXPN: L_EXPN . LEQ $@12 L_EXPN
   30       | L_EXPN . GT $@13 L_EXPN
   32       | L_EXPN . LT $@14 L_EXPN
   34       | L_EXPN . NEQ $@15 L_EXPN
   34       | L_EXPN NEQ $@15 L_EXPN .
   36       | L_EXPN . DEQ $@16 L_EXPN

    $default  reduce using rule 34 (L_EXPN)


State 84

   28 L_EXPN: L_EXPN . LEQ $@12 L_EXPN
   30       | L_EXPN . GT $@13 L_EXPN
   32       | L_EXPN . LT $@14 L_EXPN
   34       | L_EXPN . NEQ $@15 L_EXPN
   36       | L_EXPN . DEQ $@16 L_EXPN
   36       | L_EXPN DEQ $@16 L_EXPN .

    $default  reduce using rule 36 (L_EXPN)


State 85

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   18 STATEMENT: IF LB $@5 L_EXPN RB $@6 $@7 STATEMENTS . $@8 ELSE $@9 $@10 STATEMENTS ENDIF

    ELSE      reduce using rule 15 ($@8)
    $default  reduce using rule 3 ($@2)

    $@2  go to state 10
    $@8  go to state 86


State 86

   18 STATEMENT: IF LB $@5 L_EXPN RB $@6 $@7 STATEMENTS $@8 . ELSE $@9 $@10 STATEMENTS ENDIF

    ELSE  shift, and go to state 87


State 87

   18 STATEMENT: IF LB $@5 L_EXPN RB $@6 $@7 STATEMENTS $@8 ELSE . $@9 $@10 STATEMENTS ENDIF

    $default  reduce using rule 16 ($@9)

    $@9  go to state 88


State 88

   18 STATEMENT: IF LB $@5 L_EXPN RB $@6 $@7 STATEMENTS $@8 ELSE $@9 . $@10 STATEMENTS ENDIF

    $default  reduce using rule 17 ($@10)

    $@10  go to state 89


State 89

   18 STATEMENT: IF LB $@5 L_EXPN RB $@6 $@7 STATEMENTS $@8 ELSE $@9 $@10 . STATEMENTS ENDIF

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 90


State 90

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   18 STATEMENT: IF LB $@5 L_EXPN RB $@6 $@7 STATEMENTS $@8 ELSE $@9 $@10 STATEMENTS . ENDIF

    ENDIF  shift, and go to state 91

    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 91

   18 STATEMENT: IF LB $@5 L_EXPN RB $@6 $@7 STATEMENTS $@8 ELSE $@9 $@10 STATEMENTS ENDIF .

    $default  reduce using rule 18 (STATEMENT)
